syntax = "proto3";

package questionsservice.v1;

option go_package = "questions/v1;questionsv1";

import "external/questions/v1/shared.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service QuestionsAdminService {
  rpc GetFilteredQuestions(GetFilteredQuestionsRequest) returns (GetFilteredQuestionsResponse);
  rpc CreateCategory(CreateCategoryRequest) returns (CreateCategoryResponse);
  rpc CreateQuestion(CreateQuestionRequest) returns (google.protobuf.Empty);
  rpc UpdateCategory(UpdateCategoryRequest) returns (google.protobuf.Empty);
  rpc UpdateQuestion(UpdateQuestionRequest) returns (google.protobuf.Empty);
  rpc UpdateQuestionOption(UpdateQuestionOptionRequest) returns (google.protobuf.Empty);
  rpc DeleteQuestion(DeleteQuestionRequest) returns (google.protobuf.Empty);
  rpc DeleteQuestionOption(DeleteQuestionOptionRequest) returns (google.protobuf.Empty);
}

message CreateCategoryRequest {
  string name = 1;
}

message CreateCategoryResponse {
  int32 id = 1;
}

message CreateQuestionRequest {
  Type type = 1;
  Difficulty difficulty = 2;
  int32 category_id = 3;
  string text = 4;
  repeated Option options = 5;
  string language = 6;
  optional string media_url = 7;
}

message UpdateCategoryRequest {
  int32 id = 1;
  string name = 2;
}

message UpdateQuestionRequest {
  string id = 1;
  optional Type type = 2;
  optional Difficulty difficulty = 3;
  optional int32 category_id = 4;
  optional string text = 5;
  optional string language = 6;
}

message UpdateQuestionOptionRequest {
  string id = 1;
  optional string text = 2;
  optional bool is_correct = 3;
}

message DeleteQuestionRequest {
  string id = 1;
}

message DeleteQuestionOptionRequest {
  string id = 1;
}

message GetFilteredQuestionsRequest {
  uint64 page = 1;
  uint64 size = 2;
  optional Order order = 3;
  optional Sort sort = 4;
  optional TypeFilter type_filter = 5;
  optional DifficultyFilter difficulty_filter = 6;
  optional CategoryFilter category_filter = 7;
  optional LanguageFilter language_filter = 8;
  optional CreatedAtFilter create_at_filter = 9;
}

message GetFilteredQuestionsResponse {
  repeated Question questions = 1;
  uint64 page = 2;
  uint64 size = 3;
  Order order = 4;
  Sort sort = 5;
  int64 amount = 6;
}

enum Order {
  ORDER_UNSPECIFIED = 0;
  ORDER_ID = 1;
  ORDER_TEXT = 2;
  ORDER_TYPE = 3;
  ORDER_DIFFICULTY = 4;
  ORDER_CATEGORY = 5;
  ORDER_LANGUAGE = 6;
  ORDER_CREATED_AT = 7;
}

enum Sort {
  SORT_UNSPECIFIED = 0;
  SORT_ASC = 1;
  SORT_DESC = 2;
}

message TypeFilter {
  repeated Type types = 1;
}

message DifficultyFilter {
  repeated Difficulty difficulties = 1;
}

message CategoryFilter {
  repeated int32 categories = 1;
}

message LanguageFilter {
  repeated string languages = 1;
}

message CreatedAtFilter {
  google.protobuf.Timestamp from = 1;
  google.protobuf.Timestamp to = 2;
}